=======================================
Boatloader
=======================================

How a computer starts up

1. BIOS is copied from a ROM chip into RAM
2. BIOS starts executing code 
   - initializes hardware
   - run some tests (POST = Power-on self test)
3. BIOS searches for an operating system to start
4. BIOS loads and starts the operating system
5. Operating system runs



How the BIOS finds an OS

Legacy booting:
- BIOS loads first sector of each bootable device into memory (at location 0x7C00)
- BIOS checks for 0xAA55 signature
- If found, it starts executing code

EFI:
- BIOS looks into special EFI partitions
- Operating system must be compiled as an EFI program



=======================================
Memory segmentation
=======================================

real_address = segment * 16 + offset  ----->  written as segment:offset

eg. 0x7C00 is equal to 0x0000:0x7C00, 0x0001:0x7BF0, 0x0010:0x7B00, 0x0100:0x7000, 0x07C0:0x0000, etc...



These registers are used to specify currently active segments:
- CS: currently running code segment
- DS: data segment
- SS: stack segment
- ES,FS,GS: extra (data) segments



Referencing a memory location

segment:[base + index * scale + displacement]

All fields are optional:
- segment: CSM DS, ES, FS, GS, SS
           if unspecified: SS when base is BP, otherwise DS
- base: (16 bits) BP/BX
	(32/64 bits) any general purpose register
- index: (16 bits) SI/DI
	(32/64 bits) any general purpose register
- scale (32/64 bits only) 1, 2, 4, or 8
- displacement: a (signed) constant value



The stack:
- memory is accessed in a LIFO (last in, first out) manner using push and pop
- used to save the return address when calling functions



=======================================
Interrupts
=======================================

An interrupt is a signal which makes the processor stop what it's doing, in order to handle that signal

Can be triggered by:
- exception (dividing by zero, segmentation fault, page fault, etc...)
- hardware (keyboard key pressed/released, timer tick, disk controller finished an operation, etc...)
- software (through the INT instruction)

Examples of BIOS interrupts:
- INT 10h -- Video
    - AH = 00h -- Set Video Mode
    - AH = 01h -- Set Cursor Shape
    - AH = 02h -- Set Cursor Position
    - AH = 03h -- Get Cursor Position And Shape
    ...
    - AH = 0Eh -- Write Character in TTY Mode
    ...
- INT 11h -- Equipment Check
- INT 12h -- Memory Size
- INT 13h -- Disck I/O
- INT 14H -- Serial communications
- INT 15h -- Cassette
- INT 16h -- Keyboard I/O
...

